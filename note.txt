https://firebase.google.com/ > Docs > Overview > Firebase Fundamental

mpm init or  npm init -y 
npm install firebase or npm install firebase@latest 
npm install express or npm install express@latest

to run this server 
open with liveserver or node server.js or nodemon server.js 

To run program using express server 
node server.js or nodemon server.js (update ဖြစ်ရင် auto သိပြီး ပြန် run စရာမလိုဘူး nodemon က)

express server က public folder eg.(dist folder) မှာ အပြောင်းအလဲ လုပ်ရင် ပြောင်းမယ် root (eg. src) မှာ လုပ်ရင်တော့ effect မဖြစ်ဘူး 

To run program using vite 
npm run dev

vite က root folder (eg. src) မှာ အပြောင်းအလဲ လုပ်ရင် ပြောင်းမယ် public folder (eg. dist) မှာ လုပ်ရင်တော့ effect မဖြစ်ဘူး 

=> How to use Vite 

1. Install 
    npm install --save-dev vite 

2. Create a new file as vite.config.js file 
    import { defineConfig } from 'vite'; 

    export default defineConfig({
        root: './src', 
        build: {
        outDir: '../dist', // define the output directory, the output directory for to build files 
        }
    });
    
3. Update package.json 
    "scripts": {
        "dev": "vite",
        "build": "vite build"
    },

4. Run Build the app for production 
    npm run build 

5. Run Vite in development server 
    npm run dev 

- - - - - - - - - - - - - - - - - - - - - - - -
=>firebase authentication 
authentication ထဲက sign-in method မှာ ကိုယ်အသုံးပြုချင် method ကို enable လုပ်ဖို့ လိုအပ်ပါမယ် 

- - - - - - - - - - - - - - - - - - - - - - - -


=> How to install Tailwind Css 

1. Install Tailwind CSS
https://tailwindcss.com/docs/installation/using-postcss 

npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init ( this create a tailwind.config.js file in your project)

2.Add Tailwind to your PostCSS configuration
create postcss.config.js manually ( Note: do not forget to export as ES6)

export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  }
}

3.Configure your template paths

/** @type {import('tailwindcss').Config} */
module.exports = {
  content: ["./src/**/*.{html,js}"],
  theme: {
    extend: {},
  },
  plugins: [],
}

4.Add the Tailwind directives to your CSS
create a css file located to ( eg. src/css/main.css)

@tailwind base;
@tailwind components;
@tailwind utilities;

5. include css link to each html fles 
<link href="" rel="stylesheet" />


npm run build 
npm run dev

- - - - - - - - - - - - - - - - - - - - - - - -

=> Install Express 

npm install express or npm install express@latest 
nodemon server.js 

=> import 

import express from 'express';


- - - - - - - - - - - - - - - - - - - - - - - -

=> Enable Email/Password Authentication 
Make sure you have enable Email/Password authentication in your Firebase Console.

Authentication > Sign-in Method 
Ensure Email/Password is enabled. 
Save the changes 

=> Enable Google Sign-In in Firebase Console 

Authentication > Sign-in Method 
Enable Google under the list of providers 

Public-facing name for project = your project id 
Support email for project = your firebase gmail address
Save the changes 

- - - - - - - - - - - - - - - - - - - - - - - -

=> Customize the Password Reset Email Template 
you can customize the password reset email link to redirected user to a specific page in your app 

Authentication > Templates > Password reset > click Edit pen 

- - - - - - - - - - - - - - - - - - - - - - - -

=> How to install Date Fns 

1. Install 
https://date-fns.org/v4.1.0/docs/Getting-Started

npm install date-fns --save 

2. import in src/main.js or src/js/uielement.js 

import { format } from "date-fns";
const formatteddate = format(new Date(createdtime),"do MMM yyyy")


- - - - - - - - - - - - - - - - - - - - - - - -

=> Install Fontawesome 6

1. Install 

npm install @fortawesome/fontawesome-free 

2. import in src/main.js or src/js/authsigninapp.js 

import "@fortawesome/fontawesome-free/css/all.css";

- - - - - - - - - - - - - - - - - - - - - - - -

=> When run npm run build, to create needed files, update as the following build with rollupOptions , otherwise when build, will only create index.html file , other files will not be built 

build: {
            outDir: '../dist', // define the output directory, the output directory for to build files 
            rollupOptions: {
                input: {
                    main: './src/index.html',
                    profile: './src/profile.html',
                    reset: './src/reset.html',
                    signin: './src/signin.html', 
                    signup: './src/signup.html',
                }
            }
        },

- - - - - - - - - - - - - - - - - - - - - - - -

=> Deploy on Cloud Server 

1. your project need Repo public/private to Github 

2. signin your account to https://render.com/ 

3. Prepare the build output 
    your project must builded and typically located in the "dist" directory 

4. Create a new static site 
    click > "New +" > Static Site > Github > your account > choose repo > Click "Connect"

5.Name: publicchatroom 
  Branch: main 
  Build Command : npm run build (React, Vue, vite, etc...), ng build (Angular)
  Public Directory : dist 
  
6. Environment Variables = copy paste .env data to 



